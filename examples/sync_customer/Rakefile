# encoding: utf-8

HERE = File.dirname(__FILE__)
$LOAD_PATH.unshift HERE unless $LOAD_PATH.include?(HERE)

begin
  require 'resque/tasks'
  require 'resque-scheduler'
  require 'resque/scheduler/tasks'
  require 'resque/pool'
  require 'resque/pool/tasks'
rescue LoadError
  puts 'resque not available'
end

task :clean do
  %w(
    dev.sqlite3
    gem_graph.png
    tmp
    convertlabsdk-0.6.1.gem
  ).each do |path|
    rm_rf path, verbose: false
  end
end

require 'active_record'
require 'syncer'

def db_config
  env = ENV['RAILS_ENV'] || 'development'
  YAML::load(File.open('config/database.yml'))[env]
end

namespace :resque do
  task :setup do
    Resque.redis = ENV['REDIS_HOST'] || 'localhost:6379'
    ActiveRecord::Base.establish_connection(db_config)
  end

  task 'pool:setup' do
    ActiveRecord::Base.connection.disconnect!
    Resque::Pool.after_prefork do
      ActiveRecord::Base.establish_connection(db_config)
    end
  end

  task setup_schedule: :setup do
    Resque.schedule = YAML.load_file("#{HERE}/config/resque-scheduler.yml")
  end

  task scheduler: :setup_schedule

  task :web do 
    exec 'rackup config.ru -p9292 --host 0.0.0.0'
  end
end

require 'retries'
require 'pg'
namespace :db do
  desc 'Migrate the database'
  task :migrate do
    # wait for database to startup fully
    with_retries(max_tries: 4, base_sleep_seconds: 5, max_sleep_seconds: 120.0, rescue: PG::ConnectionBad) do |n|
      puts "Trying db:migrate attempt #{n}"
      ActiveRecord::Base.establish_connection(db_config)
      ActiveRecord::Migrator.migrate('db/migrate/')
      puts 'Database migrated.'
    end
  end
end
